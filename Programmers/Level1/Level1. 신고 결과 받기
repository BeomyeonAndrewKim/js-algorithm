[Daily Algorithm_JavaScript] Level1. 신고 결과 받기

### Question

#### Source https://school.programmers.co.kr/learn/courses/30/lessons/92334

### My solution

```javascript
function solution(id_list, report, k) {
    const uniq_id_list = [...new Set(report)];
    
    const { reporterMap, reportedMap } = uniq_id_list.reduce((acc,val) => {
        const [reporter, reported] = val.split(' ');
        
        
        const reporterVal = acc['reporterMap'][reporter] || []
        acc['reporterMap'][reporter] = [...reporterVal, reported];
        
        const reportedVal = acc['reportedMap'][reported] || 0
        acc['reportedMap'][reported] = reportedVal + 1;
        
        return acc;
    }, { reporterMap: {}, reportedMap: {} });
    
    return id_list
        .map((id) => reporterMap[id] 
             ? reporterMap[id].filter(v => reportedMap[v] / k >= 1).length
             : 0)
       
}
```

### Tio
```js
function solution(id_list, report, k) {
    var answer = [];
    
    const memo = {};
    const whoReportWhom = {};
    for (const id of id_list) {
        whoReportWhom[id] = new Set();
        memo[id] = 0;
        answer.push(0);
    }
    
    for (const str of report) {
        const [who, whom] = str.split(' ');
        if (whoReportWhom[who].has(whom)) continue;
        whoReportWhom[who].add(whom);
        memo[whom]++;
    }
    
    for (const [whom, count] of Object.entries(memo)) {
        if (count < k) continue;
        for (let i = 0; i < id_list.length; i++) {
            const id = id_list[i];
            if (whoReportWhom[id].has(whom)) {
                answer[i]++;
            }   
        }
    }
    
    
    return answer;
}
```
